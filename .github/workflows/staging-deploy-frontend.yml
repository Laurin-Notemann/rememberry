name: Staging Deployment Frontend 

on:
  push:
    paths:
      - "frontend/**"
      - ".github/workflows/staging-deploy-frontend.yml"
    branches:
      - master

jobs:
  lint-format:
    name: run linter and formatter
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        name: checkout frontend
      - uses: actions/setup-node@v3
        name: get nodejs
        with:
          node-version: 20
      - run: npm ci
        name: install dependecies
        working-directory: frontend
      - run: npm run lint
        name: linter
        working-directory: frontend
      - run: |
          if ! npx prettier --check .; then
            echo "Please format the code by running: npm run format"
            exit 1
          fi
        name: check formatting
        working-directory: frontend

  test:
    name: run tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        name: checkout frontend
      - uses: actions/setup-node@v3
        name: get nodejs
        with:
          node-version: 20
      - run: npm ci
        name: install dependecies
        working-directory: frontend
      - run: npm run test
        working-directory: frontend
        name: run tests

  build-image:
    runs-on: ubuntu-22.04
    needs: [lint-format, test]
    name: build & push docker image
    if: github.ref == 'refs/heads/master'
    # Current Solution is to directly pass in the pararmeter for the host and port 
    # so there is no build time error should be fixed at some time
    steps:
      - uses: actions/checkout@v4
        name: checkout frontend and backend
      - name: set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3
      - name: docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with: 
          images: notemann27/rememberry-frontend
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest
      - name: log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "NEXT_PUBLIC_BACKEND_HOST=api.stage.rememberry.app"
            "NEXT_PUBLIC_APP_ENV=staging"
            "NEXT_PUBLIC_BACKEND_PORT=3050"
            "APP_ENV=staging"



  staging:
    runs-on: ubuntu-22.04
    name: deploy changes on staging frontend
    if: github.ref == 'refs/heads/master'
    needs: [build-image]
    steps:
      - name: set the kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBE_SERVER_URL }}
          k8s-secret: ${{ secrets.KUBE_SERVICE_ACC_SECRET }}
      - uses: actions/checkout@v4
        name: checkout deployments
        with:
          sparse-checkout: |
            ./deployments
      - name: deploy to the kubernetes cluster
        uses: azure/k8s-deploy@v4
        with:
          namespace: rememberry
          manifests: |
            deployments/staging-frontend-deployment.yml
          images: |
            notemann27/rememberry-frontend:${{ github.sha }}
