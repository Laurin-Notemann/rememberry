name: Staging Deployment Frontend

on:
  workflow_dispatch:
  push:
    paths:
      - "frontend/**"
      - ".github/workflows/staging-deploy-frontend.yml"
    branches:
      - master

jobs:
  lint-format:
    name: lint and format
    runs-on: ubuntu-22.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: get pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: use node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: install dependencies
        run: pnpm i --frozen-lockfile
      - name: lint
        run: pnpm run frontend lint
      - name: check formatting
        run: |
          if ! pnpm run format-check; then
            echo "Please format the code by running: pnpm run format"
            exit 1
          fi

  test:
    name: test frontend
    runs-on: ubuntu-22.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: get pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: use node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: install dependencies
        run: pnpm i --frozen-lockfile
      - name: test
        run: pnpm run frontend test

  build-image:
    runs-on: ubuntu-22.04
    needs: [lint-format, test]
    name:
      build & push docker image
      # if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
        name: checkout frontend and backend
      - name: set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3
      - name: docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: notemann27/rememberry-frontend
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest
      - name: log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "NEXT_PUBLIC_BACKEND_HOST=api.stage.rememberry.app"
            "NEXT_PUBLIC_APP_ENV=staging"
            "NEXT_PUBLIC_BACKEND_PORT=3050"
            "APP_ENV=staging"
            "PORT=3000"

  push-staging:
    runs-on: ubuntu-22.04
    name:
      deploy changes on staging frontend
      # if: github.ref == 'refs/heads/master'
    needs: [build-image]
    steps:
      - name: set the kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBE_SERVER_URL }}
          k8s-secret: ${{ secrets.KUBE_SERVICE_ACC_SECRET }}
      - uses: actions/checkout@v4
        name: checkout deployments
        with:
          submodules: "recursive"
      - name: set new kustomize image tag
        env:
          GITHUB_SHA: ${{ github.sha }}
        working-directory: "deployments/frontend/base"
        run: |
          kustomize edit set image rem-frontend-image=notemann27/rememberry-frontend:$GITHUB_SHA

      - name: apply new config to deploy in cluster
        working-directory: "deployments/frontend"
        run: |
          kubectl apply -k staging
