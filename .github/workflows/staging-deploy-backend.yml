name: Staging Deployment Backend 

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/staging-deploy-backend.yml"
    branches:
      - master


jobs:

  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        name: checkout backend
        with:
          sparse-checkout: |
            ./backend
      - uses: oven-sh/setup-bun@v1
        name: get bun
        with:
          bun-version: 1.0.6
      - run: bun install --frozen-lockfile
        name: install dependecies
        working-directory: backend
      - run: bun run test
        name: test with bun
        working-directory: backend

  lint-format: 
    name: lint and format backend
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        name: checkout backend
        with:
          sparse-checkout: |
            ./backend
      - uses: oven-sh/setup-bun@v1
        name: get bun
        with:
          bun-version: 1.0.6
      - run: bun install --frozen-lockfile
        name: install dependecies
        working-directory: backend
      - run: |
          if ! bunx prettier --check .; then
            echo "Please format the code by running: bun run format"
            exit 1
          fi
        name: check code formatting
        working-directory: backend

  build-image:
    runs-on: ubuntu-22.04
    needs: [lint-format, test]
    name: build & push docker image
    steps:
      - uses: actions/checkout@v4
        name: checkout backend
        with:
          sparse-checkout: |
            ./backend
      - name: set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3
      - name: docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with: 
          images: notemann27/rememberry-backend
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest
      - name: log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          platforms: linux/amd64
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  staging:
    runs-on: ubuntu-22.04
    name: deploy changes on staging
    if: github.ref == 'refs/heads/master'
    needs: build-image
    steps:
      - name: set the kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.KUBE_SERVER_URL }}
          k8s-secret: ${{ secrets.KUBE_SERVICE_ACC_SECRET }}
      - uses: actions/checkout@v4
        name: checkout deployments
        with:
          sparse-checkout: |
            ./deployments
      - name: deploy to the kubernetes cluster
        uses: azure/k8s-deploy@v4
        with:
          action: deploy
          force: true
          strategy: basic
          namespace: rememberry
          manifests: |
            deployments/staging-backend-deployment.yaml
          images: |
            notemann27/rememberry-backend:${{ github.sha }}

